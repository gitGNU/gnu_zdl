This is zdl.info, produced by makeinfo version 4.13 from
/tmp/zdl.texi.tmp.

ZigzagDownLoader (ZDL)

   This program is free software: you can redistribute it and/or modify
it  under the terms of the GNU General Public License as published  by
the Free Software Foundation; either version 3 of the License,  or (at
your option) any later version.

   This program is distributed in the hope that it will be useful,  but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

   You should have received a copy of the GNU General Public License
along with this program. If not, see http://www.gnu.org/licenses/.

   Copyright (C) 2011  Gianluca Zoni <<zoninoz@inventati.org>>

   For information or to collaborate on the project:
`https://savannah.nongnu.org/projects/zdl'

   Gianluca Zoni (author)  `http://inventati.org/zoninoz'
<zoninoz@inventati.org>

INFO-DIR-SECTION Network Applications
START-INFO-DIR-ENTRY
* ZigzagDownLoader: (zdl). Download manager per Wget, Axel, cURL e RTMPDump. Ha estensioni per servizi di file hosting e video streaming.
END-INFO-DIR-ENTRY


File: zdl.info,  Node: Top,  Next: Il comando ZDL,  Up: (dir)

ZigzagDownLoader (ZDL)
**********************

_ZigzagDownLoader_ gestisce gli scaricamenti di alcuni downloader come
_Wget_, _Axel_, _RTMPDump_ o _cURL_. Inoltre, può estrarre l'URL dei
file da scaricare da servizi di file hosting e video streaming. È
compatibile con _Conkeror_, _XXXTerm/Xombrero_, _Firefox_ (attraverso
l'estensione _Flashgot_) e _Microsoft Windows_ (tramite _Cygwin_).

Perché questo programma
************************

ZigzagDownLoader esiste perché serve un gestore di download,
indefinitamente estensibile e robusto, che sia pienamente controllabile
da terminale.  È nato come script specifico per la Bash e si è
trasformato in un gestore per downloader che ne avevano bisogno (in
particolare, Wget e Axel), estendendosi a servizi di video streaming e
file hosting e integrandosi con altre applicazioni.  Nonostante i suoi
limiti strutturali, il linguaggio della _Bash_ si è rivelato adatto
allo scopo, soprattutto per la flessibilità d'uso nella gestione dei
processi di altri programmi. Una progressiva efficienza è stata
raggiunta attraverso lo sviluppo di script _monolitici_ nel linguaggio
di _Awk_ (_Gawk_).

Almeno quattro direttrici di sviluppo
-------------------------------------

L'esecuzione di downloader come Wget e Axel può richiedere assistenza:
la connessione può interrompersi, l'indirizzo IP cambiare, i download
incepparsi, i nomi dei file scaricati possono non essere intelligibili
o coincidere con altri di file già salvati, ecc.  _In primo luogo_,
ZigzagDownLoader serve ad automatizzare la gestione dei download e a
semplificarne eventuali recuperi manuali. ZDL è pensato, soprattutto,
per il download _accelerato_ di grossi file.

   _In secondo luogo_, la gestione automatica è estesa a servizi di
file hosting e video streaming: ZDL si sostituisce all'utente nelle
operazioni inutili e noiose, riducendole all'unico atto di avvio del
programma.

   _Un terzo obiettivo_ del progetto ZDL consiste nel fornire nuove
articolazioni e modalità d'uso, allo scopo di costruire interazioni fra
programmi e di rendere possibile un'automazione potenzialmente
illimitata.  La gestione dei download può essere controllata da
terminali distinti in modalità diverse. Per esempio, ZDL può essere
avviato in modalità _demone_ e controllato in modalità _interattiva_.
Anche l'avvio _predefinito_ del programma offre diversi modi di
interazione e di output. ZDL, inoltre, può essere integrato e collegato
con altri programmi.

   _Infine_, una peculiarità del progetto ZDL consiste nella ricerca di
efficienza e portabilità: l'impiego degli strumenti forniti dalla Bash
ne rende possibile l'esecuzione su hardware di limitate capacità e su
sistemi operativi differenti.

Software Libero
***************

ZDL è software libero, rilasciato con licenza GPL (General Public
License): `http://www.gnu.org/licenses/gpl.html'

   *note Copying::.

Installa ZDL
************

*note Installazione e aggiornamento::

* Menu:

_ZDL_
* Home:Top. ZigzagDownLoader

* Il comando ZDL::
Sintassi, opzioni e altri argomenti

* Servizi streaming/hosting::
Estensioni di ZDL e consigli pratici

* Installazione e aggiornamento::
Per GNU/Linux e Microsoft Windows/Cygwin


_Come si usa ZDL_
* Avviare ZDL::
Modalità di esecuzione del programma e avvio dei download

* Arrestare ZDL::
Modalità di arresto del programma

* Controllare i download::
Modalità di controllo dei processi avviati, in coda o sospesi

* Manuali d'uso::
Documentazione disponibile per ZDL


_Strumenti e funzioni_
* Modi::
Predefinito, Lite, Interattivo, Demone

* Readline::
La riga di comando di ZDL

* Editor::
Editor integrato, per modificare la coda di download

* Omonimie::
Gestione dei file omonimi e recupero dei download interrotti

* Filtri::
Filtri per l'estrazione e la selezione di file e URL


_Espandere ZDL_
* Creare nuove estensioni::
Estensioni Bash di ZDL personalizzate e per nuovi servizi

* Software consigliati::
Programmi utili a ZDL

* Conkeror::
Comando `zdl' per il browser

* zdl-xterm e XXXTerm/Xombrero::
Uno script per collegare ZDL ad altri programmi


* Tags::Indici analitici


* Copying::Autori e Licenza


* Contatti::Per assistenza o per partecipare


File: zdl.info,  Node: Il comando ZDL,  Next: Servizi streaming/hosting,  Prev: Top,  Up: Top

Il comando ZDL
**************

ZDL è un programma per la Bash, scritto prevalentemente con il
linguaggio della Bash. Di seguito, l'esposizione sintetica della
sintassi, delle opzioni e degli altri argomenti del comando `zdl'. Per
maggiori informazioni, consulta le sezioni specializzate. ZDL è
predisposto per il completamento automatico degli argomenti (usare il
tasto `<Tab>').

Sintassi
========

`zdl [_OPZIONI_] [_file_ ...] [_link_ ...] [_directory_] '

Argomenti
=========

L'ordine delle opzioni e degli altri argomenti non è importante:

_file_
     Nomi dei file da cui estrarre i _link_. I file devono essere
     testuali oppure container DLC (se omessi, ZDL processa i _link_ in
     memoria nella _directory_ e quelli in input)

_link_
     URL dei file oppure delle pagine web dei servizi di hosting,
     streaming o di reindirizzamento (se omessi, ZDL processa quelli in
     memoria nella _directory_ e nei _file_)

_directory_
     Directory di avvio di ZDL e di destinazione dei download (se
     omessa, è quella corrente)

   
Opzioni
-------

Le opzioni brevi non seguite da valori possono essere contratte:
`-ufmd' equivale a `-u' `-f' `-m' `-d'

`-h, --help'
     Help di _ZigzagDownLoader (ZDL)_

`--wget'
     Forza l'uso di _Wget_

`--axel'
     Forza l'uso di _Axel_

`-m [_numero_], --multi [_numero_]'
     Download parallelo. È possibile indicare il numero massimo di
     download da effettuare contemporaneamente

`--login'
     Utilizza eventuali account registrati per i servizi abilitati
     (configurare ZDL)

`-u, --update'
     Aggiorna ZDL

`-f, --force'
     Forza l'aggiornamento manuale di ZDL

`--clean'
     Cancella eventuali file temporanei dalla directory di
     destinazione, prima di effettuare il download

`-d, --daemon'
     Avvia ZDL in modalità _demone_ (può essere controllato attraverso
     l'interfaccia interattiva)

`-i, --interactive'
     Avvia l'interfaccia interattiva di ZDL per i download che hanno
     come destinazione la directory attuale. I download gestiti possono
     essere attivi o registrati nei file temporanei della directory

`-l, --lite'
     Avvia ZDL in modalità in standard output _lite_ (sono validi i
     comandi della modalità in _standard output_). Può essere
     configurata come modalità di avvio predefinita.

`--out=_programma_|_file_'
     Restituisce in output i nomi dei file dei download completati, in
     due modi alternativi:

    _programma_
          programma che può "aprire" il file scaricato

    _file_
          file testuale in cui sono registrati i nomi dei file

`--mp3'
`--flac'
     Convertono i file (anche da video in audio) in MP3 oppure in FLAC:
     dipendono da _FFMpeg/AVConv_

`--ip'
     Scrive l'indirizzo IP attuale, prima di effettuare altre operazioni

`--reconnect'
     Forza la riconnessione del modem al termine di ogni download,
     utilizzando uno script/comando/programma (configurare ZDL)

`-r, --resume'
     Recupera o riscarica file parzialmente scaricati. Agisce in caso
     di omonimia fra file (leggi il manuale). Può essere configurato
     come comportamento predefinito

`--no-complete'
     Cancella i file temporanei dei download completati


Filtri:
.......

`--scrape-url=_URL pagina web_'
     Estrae gli URL (i link) dalla pagina web indicata e li accoda
     all'elenco registrato

`--scrape-url'
     Estrae gli URL (i link) dalle pagina web indicate come _link_

`--url=_regex_'
     Processa solo gli URL (i link) che corrispondono alla REGEX

`--no-url=_regex_'
     Non processa gli URL (i link) che corrispondono alla REGEX

`--file=_regex_'
     Scarica solo file il cui nome corrisponde alla REGEX

`--no-file=_regex_'
     Non scarica i file il cui nome corrisponde alla REGEX

`--no-rev'
     Non scarica i file con estensione '.rev'

`--no-sub'
     Non scarica i file il cui nome contiene la stringa 'sub' (in
     lettere maiuscole e minuscole), scarta i file video sottotitolati.


Avvio con un editor:
....................

`-e, --editor'
     sostituisce l'interfaccia di ingresso di ZDL con l'editor
     predefinito dal sistema oppure con quello configurato per ZDL con
     `zdl -c'

`--emacs, --emacs-nw'
     usa Emacs o la sua versione solo testo/non grafica

`--jed'
     usa Jed, un piccolo editor in stile Emacs

`--jupp'
     usa Jupp

`--mcedit'
     usa l'editor di Midnight Commander

`--mg'
     usa Mg, un micro editor in stile Emacs

`--nano'
     usa l'editor Nano

`--vi, --vim'
     usa l'editor Vi o Vim

`--zile'
     usa Zile, un micro editor GNU in stile Emacs


Avvio con Proxy:
................

`--proxy'
     Avvia ZDL attivando un proxy automaticamente (il tipo di proxy
     predefinito è Transparent)

`--proxy=t|a|e'
     Avvia ZDL attivando un proxy del tipo definito dall'utente:

          `t' = Transparent

          `a' = Anonymous

          `e' = Elite

`--proxy=_IP_:_PORTA_'
     Avvia ZDL attivando il proxy indicato dall'utente, per l'intera
     durata del download (il proxy viene sostituito automaticamente
     solo per i link dei servizi abilitati che necessitano di un nuovo
     indirizzo IP)


Configurazione:
...............

`-c, --configure'
     Interfaccia di configurazione di ZDL, permette anche di salvare
     eventuali account dei servizi di hosting

`--stream [_parametri_] [--noXterm]'
     Per scaricare lo stream incorporando ZDL in nuovi script, il
     modello generico dei parametri per le componenti aggiuntive
     (rispettare l'ordine):



File: zdl.info,  Node: Servizi streaming/hosting,  Next: Avviare ZDL,  Prev: Il comando ZDL,  Up: Top

Scaricare da servizi di _video streaming_ e di _file hosting_
*************************************************************

ZDL è abilitato per il download da ogni tipo di link valido, compresi
lo stream video (da Youtube, Nowvideo, Dailymotion...) per mezzo di
estensioni dei browser, ed i file condivisi attraverso i seguenti
servizi di hosting e di streaming, direttamente dal link (bypassando il
player delle pagine web):

_Video in streaming saltando il player del browser:_
     Akstream, Dailymotion, Exashare, Fastvideo, Flashx.tv, Junkyvideo
     (HD), Metacafe, Movshare, Nowvideo, Openload,
     Portalevideo.unimi.it, Putstream, Rai.tv, Rapidvideo, Sockshare
     (HD), Speedvideo (HD), Streamin (RTMP), Thevideo, Tvdigit.it,
     Videopremium (RTMP), Videowood, Vidhappy (RTMP), Vimeo (HD), VK
     (HD), Youtube, Zinwa (RTMP) 

_File hosting:_
     Billionuploads, Cloudzilla, Cyberlocker, Easybytez, Glumbouploads,
     Junkyvideo (HD), Likeupload, Mediafire, Nowdownload, Openload,
     Sockshare (HD), Thevideo, Tusfiles, Uload, Uppit, Uptobox e, dopo
     aver risolto il captcha e generato il link, anche Sharpfile,
     Depositfiles ed altri servizi 

_Short links:_
     Adf.ly, Adfoc.us, bit.ly, goo.gl, linkbucks.com, Shortlink,
     swzz.xyz

_Tutti i file scaricabili con le seguenti estensioni dei browser:_
     _Flashgot_ di _Firefox/Iceweasel/Icecat_, funzione `M-x zdl' di
     _Conkeror_ e script `zdl-xterm' (_XXXTerm/Xombrero_ e altri)

_Tutti i file scaricabili con i seguenti programmi:_
     youtube-dl [-list-extractors]

Altre informazioni utili.
=========================

Per i servizi di hosting seguenti è consigliato l'uso della funzione
_multi_ (aggiungere l'opzione `-m' alle istruzioni sopra elencate,
eventualmente indicando il massimo numero di download da effettuare in
contemporanea) per procedere con il download in parallelo,
eventualmente attraverso l'uso di proxy: Easybytez, Sharpfile e
Mediafire

   I servizi seguenti sono abilitati solo per il download con Wget:
Easybytez, Dailymotion, Cloudzilla e Videowood.

   I servizi seguenti richiedono l'uso di RTMPDump (in sua mancanza, ma
con limitazioni, di cURL): Zinwa, Vidhappy, Videopremium e Streamin.

   Gli altri servizi sono abilitati in modo predefinito per Axel.

   Per scaricare da Sharpfile, Depositfiles e da altri servizi,
attualmente è necessario utilizzare il browser web per risolvere il
captcha, generare il link ed avviare il download attraverso le
componenti aggiuntive compatibili dei browser oppure con ZDL avviato
dal terminale.

   L'opzione `--login' attiva il login automatico nel caso la
configurazione di ZDL comprenda uno o più account per l'uso di un
servizio di hosting. In particolare, la registrazione di molti account
per Easybytez non solo permette il download di file di grandezza fino a
600 MB, ma consente anche lo scaricamento in parallelo di più file
senza l'uso di proxy (in questo caso è necessario specificare anche
`-m' oppure `--multi'). Per configurare l'uso di account: `zdl
[-c|--configure]'

   Per ogni servizio o link, nel caso in cui Axel non dovesse riuscire
a connettersi si consiglia di provare ad usare Wget.


File: zdl.info,  Node: Avviare ZDL,  Next: Arrestare ZDL,  Prev: Servizi streaming/hosting,  Up: Top

Modalità di avvio
******************

ZDL può essere avviato in diversi modi:

_A) Per immettere link e avviare nuovi download:_
       1. generando automaticamente la lista dei link per il download:

             - apri un terminale ed entra nella directory che dovrà
               contenere i file scaricati

             - avvia ZDL digitando il comando seguito da eventuali
               opzioni

             - copia i link dei file da scaricare e incollali nel
               terminale (vai a capo dopo ogni link)

             - digita `M-x' e poi `<Invio>' (`M' è il tasto _Meta_,
               cioè `<Alt>')


       2. Utilizzando uno o più file preparati con un editor di testi
          (andare a capo dopo ogni link) e raggiungibili dalla
          directory di destinazione (indica un path valido):

             - apri un terminale ed entra nella directory che dovrà
               contenere i file scaricati (in alternativa, puoi
               indicare a _ZDL_ la directory di lavoro)

             - digita il comando `zdl' seguito dai nomi dei file che
               contengono la lista dei link: `zdl' _path/file ..._

       3. Indicando direttamente a ZDL i link da processare (se link
          validi dovessero essere dichiarati non validi, prova con il
          modo _1_): `zdl' _link ..._

       4. Dal browser web, attraverso l'uso di componenti aggiuntive
          (_Flashgot_ per _Firefox_, lo script `zdl-xterm', il comando
          `zdl' di Conkeror, ...), allo scopo di catturare e salvare lo
          stream di un video o un altro file di qualsiasi tipo.

       5. In modalità "demone" (anche dalla modalità interattiva)

       6. Usando un editor, con l'opzione `-e' o altre più specifiche
          (per esempio, `--emacs-nw')

     I file, la directory di lavoro e i link possono essere immessi in
     qualsiasi ordine. Tutti i link degli input sono salvati nel file
     `links.txt', nella directory di destinazione.

_B) Per gestire download già avviati nelle modalità "non interattiva" e "demone":_
     avviando la modalità interattiva in due modi:

       1. in console dalla directory di destinazione dei download, con
          il comando `zdl -i' oppure `zdl --interactive'

       2. nella modalità "non interattiva" (standard), digitando il
          tasto `i'


File: zdl.info,  Node: Arrestare ZDL,  Next: Controllare i download,  Prev: Avviare ZDL,  Up: Top

Modalità di arresto
********************

ZDL può essere fermato in diversi modi:
   * Se i download sono gestiti dalla modalità "non
     interattiva"/standard:

       1. digitando `M-k' (in questo caso saranno interrotti tutti i
          download avviati da ZDL nella directory di destinazione
          specificata o in quella corrente)

       2. digitando `M-q' (tutti i download già avviati nella directory
          corrente non saranno interrotti, ma non verranno più gestiti
          da ZDL fino ad una nuova istanza _standard_ oppure _demone_
          del programma)

   * Se i download sono gestiti dalla modalità "demone": attraverso la
     modalità interattiva `zdl -i' avviata nella directory gestita dal
     demone, digitando il tasto di uscita "Quit" (in maiuscolo, cioè
     con `Shift-q'): `Q' (in questo caso i download avviati nella
     directory non sarano interrotti, ma non verranno gestiti da ZDL a
     meno che non sia riavviato per gestire gli stessi download)


File: zdl.info,  Node: Controllare i download,  Next: Manuali d'uso,  Prev: Arrestare ZDL,  Up: Top

Controllare i download: recupero, eliminazione, arresto, riavvio...
*******************************************************************

I download possono essere controllati in modalità diverse in base al
tipo di operazione da effettuare.  L'avvio da terminale permette
l'esecuzione delle operazioni elencate nella presentazione del comando:
*note Il comando ZDL::. Poiché ZDL può essere chiuso senza interrompere
i download, questa modalità di controllo può essere adottata in ogni
momento, a esecuzione già avviata. Per _chiudere senza interrompere i
download_:
   - se avviato in modalità standard, digitare `M-q' (tasti `<Alt>+<q>')

   - da modalità interattiva, digitare `Q' (tasti `<Shift>+<q>')

   Una volta _chiuso_ (o anche _ucciso_ interrompendo i download), ZDL
può essere riavviato utilizzando nuove opzioni.

Un esempio, partendo da un problema pratico: aggiungere opzioni a download avviati dal browser.
-----------------------------------------------------------------------------------------------

_Problema:_
     voglio scaricare dei file da Easybytez usando _Flashgot_, ma voglio
     anche usare le opzioni `--login', `--multi' e `--clean', che non
     sono impostate di default. Come posso utilizzare queste funzioni
     aggiuntive usando il browser (con _Flashgot_), se queste possono
     essere attivate solo dal terminale?

_Soluzione:_
        - avvio zdl in un terminale, dalla directory di destinazione,
           utilizzando tutte le opzioni di cui ho bisogno:
           `zdl -m --login --clean'

        - usando _Firefox_, clicco con il tasto destro del mouse sui
          link dei     file da scaricare e avvio il download con
          _Flashgot_: il download     non viene effettuato subito e i
          link vengono registrati da zdl per     essere processati da
          un'altra istanza attiva del programma (quella     nel
          terminale)

        - quando ho finito di registrare i link, torno al terminale e,
          senza     scrivere nulla, digito `M-x Invio'

Controllo manuale dei download.
-------------------------------

ZDL processa i _link_ registrati, generando per ciascuno un file
temporaneo da cui può estrarre informazioni sul file da scaricare e sul
download in corso, intattivo o completato. Grazie a tali informazioni,
è possibile il controllo dei processi di download, sia automaticamente
da parte di ZDL, sia manualmente da parte dell'utente.

   I download di ZDL possono essere controllati manualmente attraverso
la modalità interattiva, che può essere attivata da quella standard
digitando `M-i' (tasti `<Alt>+<i>') o da un qualsiasi terminale _Bash_
dalla stessa directory di download, utilizzando l'opzione
`-i|--interactive'. Se non è attiva alcuna istanza di avvio e gestione
automatica dei download, dall'interfaccia interattiva è possibile
avviare la modalità _demone_, che agisce in background come _server_ ed
è indipendente dal terminale di avvio. Per gestire i download e la
stessa chiusura di ZDL in modalità demone, è comunque necessario
utilizzare l'interfaccia interattiva, che ha funzione di _client_.
I comandi sono elencati nella stessa interfaccia interattiva: è
possibile modificare il numero massimo di download (da 1 a 9, digitando
i tasti dei numeri, o illimitati, digitando il tasto `m'), il tipo di
downloader da utilizzare (Axel o Wget, digitando _a_ o _w_), avviare
l'editor predefinito per modificare l'elenco dei link da processare
(tasto _e_), selezionare con _s_ i download in gestione per
_riavviarli_ (ZDL interrompe il download in corso e processa quello
successivo fino al termine della lista registrata, poi ricomincia dal
primo e così via), _terminarli_ in modo definitivo senza cancellare i
file finora scaricati o _eliminarli_ completamente. Per queste ultime
tre operazioni è possibile selezionare più download alla volta,
indicandone i numeri identificativi separandoli con spazi.

Controllo manuale dei download ancora da processare.
----------------------------------------------------

In mancanza dei file temporanei relativi a _link_ non ancora
processati, è possibile intervenire manualmente utilizzando un _editor_
(*note Editor::).


File: zdl.info,  Node: Manuali d'uso,  Next: Modi,  Prev: Controllare i download,  Up: Top

Manuali d'uso
*************

Documentazione attualmente disponibile:
   * ipertesto online: `http://nongnu.org/zdl'

   * ipertesto in formato _info_, consultabile con il comando `info
     zdl' (per migliorarne la navigazione, si consigliano `pinfo'
     oppure `emacs')

   * pagina di manuale in stile UNIX: `man zdl'


File: zdl.info,  Node: Modi,  Next: Readline,  Prev: Manuali d'uso,  Up: Top

Modi
****

ZDL può essere utilizzato in diverse modalità:

Modalità in standard output (predefinita e _lite_: `-l, --lite').
==================================================================

Sono disponibili due diverse _modalità in standard output_: quella
predefinita, che informa puntualmente l'utente di ogni operazione
compiuta, comunicando i dati rilevanti dei download in corso e quella
_lite_, estremamente compatta nella rappresentazione dei download e
_silente_ rispetto ai processi di estrazione e analisi. La seconda
modalità può essere avviata con l'opzione `-l' (`--lite') oppure
configurata come _predefinita_ attraverso l'interfaccia di
configurazione: `zdl [-c|--configure]'. È particolarmente indicata per
l'utente che usa ZDL come downloader alternativo per il browser, per
esempio attraverso l'estensione _Flashgot_.
Le _modalità in standard output_ sono dotate di una *note Readline:: e
accettano i seguenti comandi, espressi in combinazioni di tasti:

`M-i'
     avvia la _modalità interattiva_. Lo standard output del terminale
     viene ceduto ad un'altra modalità, senza però sospendere le
     attività della modalità precedente, che procedono silenti.

`M-e'
     avvia l'editor predefinito (*note Editor::). Come per il comando
     precedente, le attività non sono sospese mentre si utilizza un
     editor per manipolare la lista dei link da processare.

`M-c'
     cancella le informazioni (file temporanei) dei download completati.

`M-q'
     permette l'uscita da ZDL senza l'interruzione dei downloader, che
     continuano a registrare dati utili per un eventuale riavvio di
     ZDL: i download possono essere controllati attraverso le funzioni
     della _modalità interattiva_ ma, in caso di interruzioni, devono
     essere processati dalle modalità _in standard output_ oppure
     _demone_.

`M-k'
     uccide tutti i processi avviati nella directory, senza cancellare
     i file temporanei.

Modalità interattiva (`-i, --interactive').
============================================

Permette il controllo manuale dei download (*note Controllare i
download::) ed altre operazioni, descritte nella stessa interfaccia.
_Non processa i link_ ed è solo un _client_: per l'avvio dei download è
necessario eseguire un'istanza _server_ di ZDL, come quelle _in
standard output_ oppure _demone_. Quest'ultima può essere avviata dalla
stessa modalità interattiva.
Questa modalità d'uso è quella che fornisce più informazioni sullo
_stato_ dei download. La sua schermata è aggiornata automaticamente
ogni 15 secondi o manualmente digitando un tasto qualsiasi.

Modalità demone (`-d, --daemon').
==================================

Gestisce silenziosamente tutti i processi riferiti a una directory e
può essere controllato manualmente attraverso la _modalità
interattiva_. È indipendente dal terminale in uso, che può essere
chiuso senza conseguenze. È, in senso pieno, la modalità _server_ di
ZDL: la modalità demone è sempre in attesa di nuovi link da processare
e termina solo per intervento dell'utente, attraverso l'interfaccia
interattiva. La modalità demone consuma meno risorse rispetto alle
altre modalità.


File: zdl.info,  Node: Readline,  Next: Editor,  Prev: Modi,  Up: Top

Readline
********

L'esecuzione delle _modalità in standard output_, in mancanza di un
input esterno (_link_ immessi attraverso la linea di comando, una
_pipe_, un _file_ container _DLC_ o testuale, l'estensione di un
browser...), avvia la _readline di ZDL_. È quasi identica alla readline
della Bash: usa la stessa history e digitando il tasto `Invio' si
esegue un comando. Ma la readline di ZDL accetta, come comandi, solo
link che hanno la forma di un URL _http, https o ftp_.
In presenza di spazi nell'URL, questi sono automaticamente convertiti
nel _codice percentuale_ standard per gli URL (eventuali spazi a
sinistra e a destra dell'URL sono ignorati). L'immissione di ogni link
deve avvenire singolarmente, alla pressione del tasto _Invio_.
Utilizzando il mouse, si può _incollare_ un elenco di link, ma questi
devono essere disposti in righe diverse.
Le righe vuote e i link già registrati sono ignorati, le stringhe non
corrispondenti ad un URL sono rifiutate esplicitamente e registrate nel
file di log prodotto all'interno della stessa directory, mentre gli URL
accettati sono registrati via via nel file gestito automaticamente da
ZDL, come _coda di download_.
In ogni momento, durante l'immissione di link attraverso la readline,
si può modificare la _coda di download_ con l'editor predefinito (*note
Editor::). I processi di download sono avviati dal comando `M-x Invio',
che chiude la readline ed esegue la coda di download.

File: zdl.info,  Node: Editor,  Next: Omonimie,  Prev: Readline,  Up: Top

Editor
******

È possibile controllare la _coda di download_ attraverso un editor.
Infatti, l'elenco dei link da processare è registrato in un file
temporaneo gestito da ZDL. I link sono processati dal primo all'ultimo:
in caso di riavvio manuale o disconnessione involontaria, ZDL esamina
il link successivo. Da ogni modalità d'uso del programma è possibile
avviare un editor per alterare i link ed il loro ordine di esecuzione.
L'editor può essere utilizzato anche in sostituzione della _readline di
ZDL_ (*note Readline::), da riga di comando attraverso le opzioni
corrispondenti (*note Il comando ZDL::).
La scelta dell'editor può essere esplicita (da riga di comando) o
implicita, con l'avvio dell'editor predefinito: quest'ultimo può essere
specificato nella configurazione di ZDL (`zdl [-c|--configure]'). In
mancanza di indicazioni specifiche (per opzioni e configurazione), ZDL
esegue l'editor predefinito per la Bash o per il sistema operativo. Nel
caso si usi Cygwin, l'installatore e le funzioni di aggiornamento di
ZDL installano automaticamente l'editor _Nano_: è reso disponibile se
non è presente altro editor predefinito.

File: zdl.info,  Node: Omonimie,  Next: Filtri,  Prev: Editor,  Up: Top

Omonimie
********

Il download può diventare problematico in presenza di file omonimi
nella stessa directory, se ZDL non dispone già di informazioni grazie
alle quali riconoscere un eventuale scaricamento in sospeso o
completato. Tali informazioni possono essere ricavate solo dai file
temporanei generati da ZDL per ciascun link già processato. Cancellare
tali file con l'opzione `--clean' provoca la perdita di questi dati.
Nel caso in cui, in presenza di file omonimi, non esistono file
temporanei dei link da processare, ZDL si comporta di due modi
alternativi:

`_predefinito_'
     non sovrascrive il file omonimo, ma rinomina il nuovo file nel
     modo seguente: inserisce, fra il nome e l'estensione, una stringa
     composta da `__BIS__' e da un segmento dell'URL del link,
     opportunamente abbreviato e ricodificato. La stringa aggiuntiva
     aumenta la probabilità che non si ripeta un problema di omonimia,
     anche in mancanza dei file temporanei di processi di download
     precedenti. In ogni caso, la coda di download cancella
     automaticamente eventuali ripetizioni dello stesso link.

``-r|--resume''
     l'uso di questa opzione comporta la sovrascrittura del file
     omonimo. In mancanza di file temporanei riferiti al link da
     processare, anche il download con Axel sovrascrive comunque il
     file dall'inizio. Questa opzione può essere configurata come
     comportamento predefinito (`zdl [-c|--configure]').


File: zdl.info,  Node: Filtri,  Next: Creare nuove estensioni,  Prev: Omonimie,  Up: Top

Filtri
******

L'applicazione dei filtri è possibile solo attraverso l'uso di opzioni
da riga di comando (o attraverso script che fanno uso di ZDL). Per
filtri avanzati può essere utile l'uso di _espressioni regolari
[REGEX]_.


File: zdl.info,  Node: Creare nuove estensioni,  Next: Software consigliati,  Prev: Filtri,  Up: Top

Creare nuove estensioni
***********************

Come aggiungere estensioni personalizzate e sperimentali.
=========================================================

ZDL incorpora il codice che trova in tutti gli script bash con
estensione `.sh' nella directory `$HOME/.zdl/extensions/'

   Script bash di esempio:

     if [[ "$url_in" =~ PATTERN ]]
     then
        url_in_file=$(sed -r 's|http://(.+)|http://USER:PASSWORD@\1|g' \
                          <<< "$url_in")
        file_in="NOME_DEL_FILE"
        num_dl=1
        axel_parts=3
     fi

   L'esempio può essere usato come modello per un link riconosciuto
attraverso una regex nel PATTERN.  Lo script modifica il link del
download in `$url_in' per ottenere l'URL del file in `$url_in_file',
aggiungendo USER e PASSWORD per accedere al server.  Inoltre, indica
come ricavare il nome del file da scaricare (variabile `$file_in') e
aggiunge o modifica opzioni: disattiva l'opzione `--multi' se applicata
al comando e stabilisce il numero di parti da scaricare con Axel (il
grado di accelerazione, che per default è 32 ma che per diversi server
può essere eccessivo o insufficiente, peggiorando le prestazioni).

   In questo modo, è possibile estendere ZDL ad altri servizi di file
hosting (anche a scopo sperimentale), aggiungere opzioni mirate e
personalizzate o implementare il funzionamento del programma,
utilizzando le variabili e le funzioni disponibili in ZDL senza
modificare il sorgente


File: zdl.info,  Node: Software consigliati,  Next: Conkeror,  Prev: Creare nuove estensioni,  Up: Top

Software consigliati
********************

_Axel_
     Acceleratore di download

_FFmpeg/AVConv_
     Convertitore per MP3/FLAC

_cURL e RTMPDump_
     Downloader per i servizi RTMP

_XTerm_
     Terminale grafico predefinito per GNU/Linux

_Flashgot_
     Estensione di Firefox/Iceweasel/Icecat

_youtube-dl_
     Script in python che amplia e potenzia le estensioni di ZDL

_Emacs_
_Jed_
_Jupp_
_Midnight Commander (MCEdit)_
_Mg_
_Nano_
_Vi, Vim_
_Zile_
     Almeno un editor qualsiasi (qui solo alcuni suggerimenti) per
     poter modificare in qualsiasi momento la lista dei link da cui
     effettuare i download

ZDL è compatibile con:
-----------------------

_Firefox/Iceweasel/Icecat_
     Attraverso l'estensione _Flashgot_

_XXXTerm/Xombrero_
     Script `zdl-xterm' in `/usr/local/bin'

_Conkeror_
     Funzione `M-x zdl' autoinstallata


Dipendenze per Windows:
-----------------------

_Cygwin (x86 32-bit)_
     Distribuzione per il porting di software di sistemi POSIX su
     Microsoft Windows



File: zdl.info,  Node: Conkeror,  Next: zdl-xterm e XXXTerm/Xombrero,  Prev: Software consigliati,  Up: Top

Conkeror: comando `zdl'
***********************

ZDL implementa automaticamente il browser Conkeror con un nuovo comando.
Per usarlo, digita: `M-x zdl'

_Dopo aver avviato il comando, il minibuffer di Conkeror_
        - chiede di selezionare la _directory_ di destinazione

        - offre la  possibilità di utilizzare le _opzioni_ di ZDL
          (lasciare il campo vuoto per non selezionarle)

        - mostra e indicizza i _link_ nel buffer corrente (per
          esempio la pagina web), per procedere nella selezione del
          link da immettere in ZDL        (il link della pagina
          corrente corrisponde all'indice 0)

        - avvia ZDL in un terminale xterm oppure, se è stata selezionata
                l'opzione `--daemon' (oppure `-d'), in background. In
          ogni caso è        possibile gestire i download utilizzando
          l'interfaccia        interattiva


File: zdl.info,  Node: zdl-xterm e XXXTerm/Xombrero,  Next: Installazione e aggiornamento,  Prev: Conkeror,  Up: Top

Lo script `zdl-xterm': XXXTerm/Xombrero e altri software
********************************************************

ZDL può essere avviato da XXXTerm/Xombrero e da altri software
attraverso lo script `/usr/local/bin/zdl-xterm', che può essere avviato
da qualunque applicazione e da un terminale. È stato pensato per
rendere possibile l'avvio di ZDL in contesti diversi da quelli previsti
dal programma. In particolare, XXXTerm può avviare uno script bash,
utilizzando il comando `:run_script', passandogli un solo argomento: il
link della pagina corrente. Questo rende impossibile l'avvio standard
di zdl in un'istanza di xterm, perché `:run_script' non accetta
ulteriori parametri. L'avvio di zdl in un nuovo terminale virtuale
xterm è reso possibile, appunto, da `zdl-xterm'.

Uso in XXXTerm:
===============

   - comando `:run_script'

   - digita: `zdl-xterm'

   - il programma avvia un'istanza di xterm che:
        * chiede in quale _directory_ scaricare il file (è
          possibile evitare questa interazione configurando zdl-xterm:
             	 inserisci in `/usr/local/bin/zdl-xterm', come valore
            	 della variabile `default_directory' all'inizio dello
            	 script, il path di una _directory valida_)

        * zdl-xterm avvia zdl sull'_URL corrente_

Semplificazione per XXXTerm.
----------------------------

Per utilizzare zdl-xterm con più rapidità, XXXTerm può essere
configurato in molti modi.

   Un suggerimento:
   - apri il file `$HOME/.xxxterm.conf'

   - inserisci il seguente testo:
          default_script = zdl-xterm
          keybinding = run_script,C-z

   Con la configurazione suggerita, digitando `Ctrl-z' si avvia il
prompt di `:run_script' con il campo già occupato dal nome dello script
`zdl-xterm': è sufficiente premere `invio'.


File: zdl.info,  Node: Installazione e aggiornamento,  Next: Tags,  Prev: zdl-xterm e XXXTerm/Xombrero,  Up: Top

Installazione e aggiornamento di ZDL
************************************

ZDL si installa automaticamente con uno script per la _Bash_.

Installazione per GNU/Linux
===========================

  1. Scarica l'installatore (è uno script per la Bash):
     `http://download.savannah.gnu.org/releases/zdl/install_zdl.sh'

  2. Attribuisci i diritti di esecuzione allo script:    `chmod +x
     install_zdl.sh'

  3. esegui lo script: `./install_zdl.sh'

Installazione per Microsoft Windows
===================================

ZDL funziona anche su Windows, ma attraverso _Cygwin_

   Installazione su Windows in due fasi:
_FASE 1) Installazione di Cygwin 32 bit_
     installatore automatico di Cygwin (serve anche ad aggiornare il
     sistema emulato e ad installare nuovi pacchetti):
     `http://cygwin.com/setup_x86.exe'
     È sufficiente l'installazione predefinita, ottenuta cliccando
     ripetutamente sul bottone _Avanti_ e scegliendo un mirror a caso
     (consigliato: `http://bo.mirror.garr.it')

_FASE 2) Installazione di ZDL_
       1. salva nella cartella `C:\cygwin' (la cartella potrebbe
          trovarsi in un altro _device_: controlla eventualmente anche
          in `D:', `E:', ecc.) il seguente file:
          `http://download.savannah.gnu.org/releases/zdl/install_zdl.sh'

       2. avvia _Cygwin_ installato nella fase 1

       3. digita il seguente comando: `/install_zdl.sh'

   Modo d'uso di ZDL su Windows: avvia Cygwin e utilizza ZDL nel
terminale avviato, come descritto in questa guida. Puoi avviare
download con ZDL anche da _Flashgot_ di _Firefox_ e da _Conkeror_
eseguiti da MS-Windows: Cygwin si avvia automaticamente.

Aggiornare ZDL
==============

Se è disponibile una nuova versione del programma, ZDL si aggiorna
automaticamente. È possibile disabilitare l'aggiornamento automatico
modificando la configurazione con `zdl --configure'.

   Per aggiornare manualmente ZDL è sufficiente usare l'opzione `-u'
(`--update').

   L'aggiornamento manuale può essere forzato aggiungendo l'opzione
`-f' (`--force')

Disinstallare ZDL
=================

È disponibile uno script di disinstallazione:
`http://download.savannah.gnu.org/releases/zdl/uninstall_zdl.sh'.


File: zdl.info,  Node: Tags,  Next: Copying,  Prev: Installazione e aggiornamento,  Up: Top

Tags/indici analitici
*********************

Indice analitico generale
=========================

 [index ]
* Menu:

* argomenti:                             Il comando ZDL.       (line 18)
* comando zdl:                           Il comando ZDL.       (line  6)
* download:                              Servizi streaming/hosting.
                                                               (line 18)
* file hosting:                          Servizi streaming/hosting.
                                                               (line 18)
* opzioni:                               Il comando ZDL.       (line 37)
* perché zdl:                            Top.                  (line  6)
* short links:                           Servizi streaming/hosting.
                                                               (line 25)
* sintassi:                              Il comando ZDL.       (line 13)
* streaming:                             Servizi streaming/hosting.
                                                               (line 12)
* video:                                 Servizi streaming/hosting.
                                                               (line 12)

Indice dei programmi
====================

 [index ]
* Menu:

* avconv:                                Software consigliati. (line  9)
* axel:                                  Software consigliati. (line  6)
* conkeror:                              Software consigliati. (line 45)
* editor:                                Software consigliati. (line 24)
* ffmpeg:                                Software consigliati. (line  9)
* firefox:                               Software consigliati. (line 39)
* flashgot:                              Software consigliati. (line 18)
* icecat:                                Software consigliati. (line 39)
* iceweasel:                             Software consigliati. (line 39)
* rtmpdump:                              Software consigliati. (line 12)
* xombrero:                              Software consigliati. (line 42)
* xterm:                                 Software consigliati. (line 15)
* xxxterm:                               Software consigliati. (line 42)
* youtube-dl:                            Software consigliati. (line 21)


File: zdl.info,  Node: Copying,  Next: Contatti,  Prev: Tags,  Up: Top

Copying
*******

Autori
======

Gianluca Zoni (zoninoz): `http://inventati.org/zoninoz'

Copyright
=========

Copyright (C) 2011
Gianluca Zoni (zoninoz): `http://inventati.org/zoninoz'
For information or to collaborate on the project:
`https://savannah.nongnu.org/projects/zdl'

Licenza di ZigzagDownLoader (ZDL)
=================================

This program is free software: you can redistribute it and/or modify it
under the terms of the GNU General Public License as published  by the
Free Software Foundation; either version 3 of the License,  or (at your
option) any later version.

   This program is distributed in the hope that it will be useful,  but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
General Public License for more details.

   You should have received a copy of the GNU General Public License
along with this program. If not, see
`http://www.gnu.org/licenses/gpl.html'


File: zdl.info,  Node: Contatti,  Prev: Copying,  Up: Top

Contatti
********

Riporta un bug (o una richiesta di supporto)
============================================

`https://savannah.nongnu.org/bugs/?func=additem&group=zdl'

Mailing list del progetto
=========================

_zdl-users - Lista degli utenti_:
`https://lists.nongnu.org/mailman/listinfo/zdl-users'
_zdl-devel - Lista di sviluppo_:
`https://lists.nongnu.org/mailman/listinfo/zdl-devel'



Tag Table:
Node: Top1185
Node: Il comando ZDL5454
Node: Servizi streaming/hosting11049
Node: Avviare ZDL14333
Node: Arrestare ZDL16771
Node: Controllare i download17876
Node: Manuali d'uso22164
Node: Modi22580
Node: Readline25846
Node: Editor27366
Node: Omonimie28591
Node: Filtri30124
Node: Creare nuove estensioni30446
Node: Software consigliati32015
Node: Conkeror33135
Node: zdl-xterm e XXXTerm/Xombrero34146
Node: Installazione e aggiornamento36070
Node: Tags38394
Node: Copying40767
Node: Contatti41817

End Tag Table


Local Variables:
coding: utf-8
End:
